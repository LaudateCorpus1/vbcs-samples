{
  "pageModelVersion": "18.3.3",
  "title": "My start page",
  "description": "The starting page of the flow",
  "variables": {
    "currentSelection": {
      "type": "string"
    },
    "departmentListSDP": {
      "type": "vb/ServiceDataProvider",
      "defaultValue": {
        "endpoint": "businessObjects/getall_Department",
        "keyAttributes": "id",
        "itemsPath": "items",
        "responseType": "page:getallDepartmentResponse"
      }
    }
  },
  "types": {
    "getallDepartmentResponse": {
      "items": [{
        "departmentName": "string",
        "id": "number",
        "location": "number",
        "manager": "number"
      }]
    }
  },
  "chains": {
    "SyncCheckboxesInTableAction": {
      "description": "",
      "variables": {
        "index": {
          "type": "number",
          "required": true,
          "input": "fromCaller"
        },
        "targetId": {
          "type": "number",
          "required": true,
          "input": "fromCaller"
        }
      },
      "root": "if1",
      "actions": {
        "assignVariables1": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.selection": {
              "source": "[[$page.variables.selection.concat([\n {\n  \"endIndex\": {\n   \"row\":  $variables.index \n  },\n  \"startIndex\": {\n   \"row\":  $variables.index \n  },\n  \"endKey\": {\n   \"row\":  $variables.targetId \n  },\n  \"startKey\": {\n   \"row\":  $variables.targetId \n  }\n }\n])]]",
              "reset": "empty"
            }
          }
        },
        "if1": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "[[ $page.variables.selection.filter(function(s){return s.startKey.row===$chain.variables.targetId }).length ]]"
          },
          "outcomes": {
            "false": "assignVariables1",
            "true": "assignVariables2"
          }
        },
        "assignVariables2": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.selection": {
              "source": "{{ $page.variables.selection.filter(function(s){ return s.startKey.row !== $chain.variables.targetId}) }}",
              "reset": "empty"
            }
          }
        }
      }
    },
    "TableSelectedChangeChain": {
      "description": "",
      "root": "selectedChangedModuleFunction",
      "actions": {
        "assignVariables1": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.currentSelection": {
              "source": "{{ $chain.results.selectedChangedModuleFunction }}"
            }
          }
        },
        "selectedChangedModuleFunction": {
          "module": "vb/action/builtin/callModuleFunctionAction",
          "parameters": {
            "module": "[[ $functions ]]",
            "functionName": "selectedChangedListener",
            "params": [
              "{{ $variables.selected }}"
            ],
            "returnType": "string"
          },
          "outcomes": {
            "success": "assignVariables1"
          }
        }
      },
      "variables": {
        "selected": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      }
    }
  },
  "eventListeners": {
    "ojTableSelected": {
      "chains": [
        {
          "chainId": "TableSelectedChangeChain",
          "parameters": {
            "selected": "{{ $event.detail.value }}"
          }
        }
      ]
    }
  },
  "imports": {
    "components": {
      "oj-table": {
        "path": "ojs/ojtable"
      },
      "oj-checkboxset": {
        "path": "ojs/ojcheckboxset"
      },
      "oj-option": {
        "path": "ojs/ojoption"
      },
      "oj-label": {
        "path": "ojs/ojlabel"
      },
      "oj-text-area": {
        "path": "ojs/ojinputtext"
      }
    }
  }
}